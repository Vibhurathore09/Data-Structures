public class DLL
{
    Node head ;
    class Node
    {
        int data;
        Node next;
        Node prev;
        Node(int data)
        {
            this.data = data;

        }
    }
    DLL()
    {
        head = null;
    }
    public void insert(int val)
    {
        Node n = new Node(val);
        n.next = null;
        n.prev = null;
        if(head == null)
        {
            head = n;
        }
        else
        {
            Node temp = head;
            while(temp.next!=null)
            {
                temp = temp.next;
            }
            temp.next = n;
            n.prev  = temp;
        }
    }
    public void delete()
    {
        if(head == null)
        {
            System.out.println("Underflow");
        }
        else if(head.next == null)
        {
            head = null;
        }
        else
        {
            Node temp = head;
            while(temp.next.next != null)
            {
                temp = temp.next;
            }
            temp.next.prev = null;
            temp.next = null;

        }
    }
    public  void traverse()
    {
        //forward
        Node temp = head;
        Node last =null;
        System.out.println("Printing Forward ");
        while(temp!=null)
        {
            System.out.print(temp.data+" ");
            last = temp;
            temp = temp.next;
        }
        System.out.println();
        //backward
        System.out.println("Printing Backward ");
        while(last!=null)
        {
            System.out.print(last.data+" ");
            last = last.prev;
        }
        System.out.println();

    }
    public static void main(String[] args) {
        DLL l = new DLL();
        l.insert(1);
        l.insert(2);
        l.insert(3);
        l.traverse();
        l.delete();
        l.traverse();
    }
}
